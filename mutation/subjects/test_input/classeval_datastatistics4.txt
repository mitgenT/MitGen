import unittest
import inspect


<generated_code_here>


class DataStatistics4TestCorrelationCoefficient(unittest.TestCase):
    def test_correlation_coefficient(self):
        return DataStatistics4.correlation_coefficient([1, 2, 3], [4, 5, 6])

    def test_correlation_coefficient_2(self):
        return DataStatistics4.correlation_coefficient([1, 1, 1], [2, 2, 2])

    def test_correlation_coefficient_3(self):
        return DataStatistics4.correlation_coefficient([1, 2, 3], [1, 2, 3])

    def test_correlation_coefficient_4(self):
        return DataStatistics4.correlation_coefficient([1, 2, 3], [1, 2, 4])

    def test_correlation_coefficient_5(self):
        return DataStatistics4.correlation_coefficient([1, 2, 3], [1, 5, 3])


class DataStatistics4TestSkewness(unittest.TestCase):
    def test_skewness(self):
        return DataStatistics4.skewness([1, 2, 5])

    def test_skewness_2(self):
        return DataStatistics4.skewness([1, 1, 1])

    def test_skewness_3(self):
        return DataStatistics4.skewness([1, 2, 3])

    def test_skewness_4(self):
        return DataStatistics4.skewness([1, 2, 4])

    def test_skewness_5(self):
        return DataStatistics4.skewness([1, 5, 3])


class DataStatistics4TestKurtosis(unittest.TestCase):
    def test_kurtosis(self):
        return DataStatistics4.kurtosis([1, 2, 5])

    def test_kurtosis_2(self):
        return math.isnan(DataStatistics4.kurtosis([1, 1, 1]))

    def test_kurtosis_3(self):
        return DataStatistics4.kurtosis([1, 2, 3])

    def test_kurtosis_4(self):
        return DataStatistics4.kurtosis([1, 2, 4])

    def test_kurtosis_5(self):
        return DataStatistics4.kurtosis([1, 5, 3])


class DataStatistics4TestPDF(unittest.TestCase):
    def test_pdf(self):
        return DataStatistics4.pdf([1, 2, 3], 1, 1)

    def test_pdf_2(self):
        return DataStatistics4.pdf([1, 1, 1], 1, 1)

    def test_pdf_3(self):
        return DataStatistics4.pdf([1, 2, 3], 2, 1)

    def test_pdf_4(self):
        return DataStatistics4.pdf([1, 2, 3], 1, 2)

    def test_pdf_5(self):
        return DataStatistics4.pdf([1, 2, 3], 2, 2)


class DataStatistics4TestMain(unittest.TestCase):
    def test_main(self):
        res = []
        res.append(DataStatistics4.correlation_coefficient([1, 2, 3], [4, 5, 6]))
        res.append(DataStatistics4.skewness([1, 2, 5]))
        res.append(DataStatistics4.kurtosis([1, 2, 5]))
        res.append(DataStatistics4.pdf([1, 2, 3], 1, 1))
        return res


def obtain_output():
    classes = ['DataStatistics4TestCorrelationCoefficient',
               'DataStatistics4TestSkewness',
               'DataStatistics4TestKurtosis',
               'DataStatistics4TestPDF',
               'DataStatistics4TestMain']
    output = []
    output_idx = 0
    for each_class in classes:
        this_class = eval(f"{each_class}()")
        test_functions = [name for name, obj in inspect.getmembers(eval(each_class))
                  if inspect.isfunction(obj)]
        for each_func in test_functions:
            try:
                function_output = eval(f"this_class.{each_func}()")
                output.append([output_idx,function_output])
            except Exception as e:
                output.append([output_idx, e])
            output_idx += 1
    return output