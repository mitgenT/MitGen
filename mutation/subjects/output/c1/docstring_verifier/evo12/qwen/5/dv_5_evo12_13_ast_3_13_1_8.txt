from typing import List, Optional, Tuple
def longest_substring(strings: List[str]) -> Tuple[Optional[str], Optional[int]]:
   def longest_vowel_substring(s: str) -> Tuple[Optional[str], int]:
       vowels = "aeiou"
       start_index = -1
       max_length = 0
       current_start = -1
       current_length = 0
       for i, char in enumerate(s):
           lower_char = char.lower()
           if lower_char in vowels:
               if current_start == -1:
                   current_start = i
               current_length += 1
           else:
               if current_length > max_length:
                   max_length = current_length
                   start_index = current_start
               current_start = -1
               current_length = 0
       if current_length > max_length:
           max_length = current_length
           start_index = current_start
       return (s[start_index:start_index + max_length] if max_length else None), i + start_index
   if not strings:
       return (None, None)
   result = ""
   index = 0
   for i, string in enumerate(strings):
       current_result, start_index = longest_vowel_substring(string)
       if current_result and len(current_result) > len(result):
           result = current_result
           index = i
   return (result, index)