from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        """
        Function to generate a list containing all non-overlapping prefix-suffix pairs from the given input string.
        Each pair's components must be at least 'min_length' characters long. The pairs are first ordered by increasing length,
        then lexicographically if their lengths are equal.
        """
        n = len(string)
        pairs = []
        for i in range(min_length, n - 1):
            start = 0
            while i + start < n and string[i] == string[start]:
                start += 1
            suffix = 0
            while i + start + suffix < n and string[n - 1 - suffix] == string[n - 1 - (i + start + suffix)]:
                suffix += 1
            for len_pair in range(min_length, min(suffix, start) + 1):
                pairs.append((string[start:start + len_pair], string[n - suffix + len_pair:n]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
