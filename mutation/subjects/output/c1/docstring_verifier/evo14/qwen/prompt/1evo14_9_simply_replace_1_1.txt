Infill <MASK> in a given code. You need to output the entire program. I will show you an example first.

# Example

## Docstring:
'''
This program implements a bubble-sortã€‚
'''

## Given code:
```Python
def program(list1):  
    '''
    This program implements a bubble-sortã€‚
    '''
    for i in range(0,len(list1)-1):  
        for j in range(len(list1)-1):  
            if(list1[j]>list1[j+1]):  
                temp = list1[j]  
                <MASK>
                list1[j+1] = temp  
    return list1  
```

## Output
```Python
def program(list1):  
    for i in range(0,len(list1)-1):  
        for j in range(len(list1)-1):  
            if(list1[j]>list1[j+1]):  
                temp = list1[j]  
                list1[j] = list1[j+1]
                list1[j+1] = temp  
    return list1  
```

Now, infill <MASK> of the following given code.

##Docstring:
Generate a list of unique prefix-suffix combinations from the given input string, where the prefixes and suffixes do not share any characters, both have a minimum length of 'min_length', and the pairs are ordered first by length in ascending order, then lexicographically if the lengths are equal. The function returns examples like this: ['ab', 'dg'], ['abc', 'dg'], ['abca', 'dg'] for the input 'abcadg' and a minimum length of 2.

## Given code:

```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        for j in range(i, n + 1 - min_length):
            if len(set(string[:i]).intersection(set(string[j:]))) == 0:
                pairs.append((string[:i], string[j:]))
    <MASK>
    return pairs
```