from typing import List, Tuple

def separate_paren_groups(paren_string: str, remove_unbalanced: bool = False) -> Tuple[List[str], int]:
    stack = []
    groups = []
    removed = 0  # Variable to track the count of removed unbalanced groups
    if remove_unbalanced:
        removed = 0  # Initialize the count to 0 if remove_unbalanced flag is True
    group = ''
    for char in paren_string:
        if char == '(':
            stack.append(char)
            group += char
        elif char == ')':
            if stack:
                stack.pop()
                group += char
                if len(stack) == 0:  # Check if the stack is empty after popping the closing parentheses
                    groups.append(group)
                    group = ''
            else:
                removed += 1  # Increment the count of removed unbalanced groups if there is no opening parentheses in stack
    if remove_unbalanced and stack:  # If remove_unbalanced flag is True and there are remaining opening parentheses in stack
        removed += len(stack)  # Add the count of remaining opening parentheses in stack to removed count
    if not remove_unbalanced:
        removed = 0  # If remove_unbalanced flag is False, set removed count to 0
    return groups, removed