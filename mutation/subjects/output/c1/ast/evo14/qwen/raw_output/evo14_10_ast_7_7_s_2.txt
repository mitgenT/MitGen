Here's the infilled code:

```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        for j in range(i, n + 1 - min_length):
            if string[i:j] not in string[j:]:
                pairs.append((string[:i], string[j:]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
```

Explanation:
- The `<MASK>` part should check if the substring from index `i` to `j` exists in the rest of the string, excluding the characters from `j`. If it doesn't, we append the non-overlapping prefix and suffix to the `pairs` list. The `not in` condition achieves this.