Based on the provided docstring, we need to sort the `pairs` list in descending order of their lengths, and in case of ties, lexicographically. We can use the `reverse=True` parameter in the `sort()` function to achieve this. Here's how the code should look after infilling `<MASK>`:

```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        for j in range(i, n + 1 - min_length):
            if len(set(string[:i]).intersection(set(string[j:]))) == 0:
                pairs.append((string[:i], string[j:]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x), reverse=True)
    return pairs
```

Now, the `pairs` list will be sorted as described in the docstring.