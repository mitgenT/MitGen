from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for length in range(min_length, n + 1):
        for i in range(n - length + 1):  # Start from index i and find substrings of length 'length'
            prefix = string[i:i+length]
            suffix = string[i+length-1:n]  # Suffix starts from the next character after the prefix
            if len(prefix) + len(suffix) == length * 2:  # Check if the combined length of prefix and suffix is twice the length
                pairs.append((prefix, suffix))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
