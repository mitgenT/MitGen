## Output
```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        for j in range(i, n + 1 - min_length):
            if j - i == len(string[i:]):
                pairs.append((string[:i], string[j:]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
```
In this solution, I added the condition `j - i == len(string[i:])` into the <MASK> section of the given code. This ensures that the length of the suffix in each prefix-suffix pair is not overlapping with the prefix, and each pair satisfies the condition of being at least'min_length' characters long. The final list of pairs is sorted as per the given requirements.