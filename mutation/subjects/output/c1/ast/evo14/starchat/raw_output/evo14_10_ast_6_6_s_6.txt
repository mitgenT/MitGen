## Output
```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        if string[i-1] < string[i]:  # Check if prefix is lexicographically smaller than the next prefix
            for j in range(i + min_length, n):  # Start checking suffix from min_length characters after prefix
                if string[j-1] < string[j]:  # Check if suffix is lexicographically smaller than the next suffix
                    if len(set(string[:i]).intersection(set(string[j:]))) == 0:  # Check for non-overlapping
                        pairs.append((string[:i], string[j:]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
```

In this case, I filled the <MASK> by adding the necessary checks for prefix and suffix strings to ensure that they are lexicographically sorted, at least'min_length' characters long, and non-overlapping. This solution meets all the requirements outlined in the docstring.