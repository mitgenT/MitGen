```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        for j in range(i, n + 1 - min_length):
            if len(set(string[:i]).intersection(set(string[j:]))) == 0:
                pairs.append((string[:i], string[j:]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
```
Here, we calculate the length of the string only once and store it in a variable 'n' for later use. The inner loop goes from 'i' to 'n + 1 - min_length' instead of 'n', avoiding redundant iterations. Finally, we sort the pairs using a tuple `(len(x[0]) + len(x[1]), x)`, first sorting by the sum of lengths and then lexicographically.