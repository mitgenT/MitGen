```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    if n < min_length or min_length < 1:
        return []
    pairs = []
    for i in range(min_length, n - 1):
        for j in range(i, n + 1 - min_length):
            if len(set(string[:i]).intersection(set(string[j:]))) == 0:
                pairs.append((string[:i], string[j:]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
```

In this program, I first checked if the length of the string is smaller than the given `min_length` or the `min_length` is smaller than 1, and returned an empty list if so. Then, I filled in the missing parts in the given code to iterate over the prefix and suffix pairs that satisfy the given conditions, and stored them in the `pairs` list. Finally, I sorted the `pairs` list based on the length of the prefix and suffix and the lexicographical order of the pairs, and returned the sorted list.