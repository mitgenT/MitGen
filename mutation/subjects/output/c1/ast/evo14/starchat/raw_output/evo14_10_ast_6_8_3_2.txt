```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        prefix = string[:i]
        suffix = string[i+1:]
        pairs.append((prefix, suffix))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
```

In the solution, a nested loop was eliminated by directly constructing pairs using the built-in slicing operation (`:`), then sorting them according to the requirements.