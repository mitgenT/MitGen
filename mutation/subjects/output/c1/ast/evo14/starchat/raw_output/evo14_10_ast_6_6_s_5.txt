## Output
```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        if len(string[:i]) >= min_length and len(string[i:]) >= min_length:
            if len(set(string[:i]).intersection(set(string[i:]))) == 0:
                pairs.append((string[:i], string[i:]))
    pairs.sort(key=lambda x: (len(x[0]) + len(x[1]), x))
    return pairs
```

Infilling '<MASK>' with 'len(string[:i]) >= min_length and len(string[i:]) >= min_length' makes sure that the prefixes and suffixes are both at least'min_length' characters long. The intersection operation checks for any overlapping characters, and it ensures that they don't exist in each pair. The lambda function in'sort' ensures that the pairs are first sorted in increasing order of their lengths and then lexicographically.