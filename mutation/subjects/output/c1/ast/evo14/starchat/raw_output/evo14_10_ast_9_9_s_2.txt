## Output
```python
from typing import List, Tuple
def all_prefix_suffix_pairs(string: str, min_length: int) -> List[Tuple[str, str]]:
    n = len(string)
    pairs = []
    for i in range(min_length, n - 1):
        for j in range(i, n + 1 - min_length):
            if len(set(string[:i]).intersection(set(string[j:]))) == 0:
                pairs.append((string[:i], string[j:]))
    pairs.sort(key=lambda x: (len(x[0]), len(x[1]), x[0], x[1]))
    return pairs
```

In this solution, the sorted function sorts the pairs of prefix-suffix in increasing order of their lengths and then lexicographically when lengths are equal. We're using a tuple's length, then length of the second item of the tuple and then lexicographic order of both elements of the tuple as the key for sorting.