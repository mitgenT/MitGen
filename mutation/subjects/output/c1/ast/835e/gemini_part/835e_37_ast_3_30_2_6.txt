from sys import stdin, stdout
class Solution:
    def BinaryInversions(self, n:int, arr:list) -> int:
            # Option-1: Flip Element at index 0, if it is 0
    
            inv_option1 = 0
            # Count the inversions if the first element is flipped
    
            for i in range(1, len(arr)):
                if arr[i] == 0 and arr[i - 1] == 1:
                    inv_option1 += 1
            # Option-2: Flip Element at index n-1, if it is 1
    
            inv_option2 = 0
            # Count the inversions if the last element is flipped
    
            for i in range(len(arr) - 2, -1, -1):
                if arr[i] == 1 and arr[i + 1] == 0:
                    inv_option2 += 1
    
            # Print the maximum inversions from both options
    
            return max(inv_option1, inv_option2)

sol = Solution()
t = int(input())
for _ in range(t):
    n = int(input())
    bits = list(map(int, input().split()))
    print(sol.BinaryInversions(n, bits))
