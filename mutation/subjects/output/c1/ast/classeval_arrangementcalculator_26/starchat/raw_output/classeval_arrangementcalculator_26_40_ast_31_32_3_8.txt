To fix the error in the `count_all` method, we can replace the line `total += ArrangementCalculator.count(n, i)` with the following code:

```python
total += ArrangementCalculator.factorial(n) // (ArrangementCalculator.factorial(i) * ArrangementCalculator.factorial(n - i))
```

This code calculates the combination count for each i and adds it to the total count. 

For the `select_all` method, we can use the itertools module's `combinations` function to generate all arrangements:

```python
result = []
for i in range(1, len(self.datas) + 1):
    for combination in itertools.combinations(self.datas, i):
        result.append(list(combination))
```

This code generates all combinations of the internal datas from 1 item up to the number of items in the datas, and appends each combination to the result list.

Here is the completed program:

```python
import itertools


class ArrangementCalculator:
    def __init__(self, datas):
        self.datas = datas

    @staticmethod
    def count(n, m=None):
        if m is None or n == m:
            return ArrangementCalculator.factorial(n)
        else:
            return ArrangementCalculator.factorial(n) // ArrangementCalculator.factorial(n - m)

    @staticmethod
    def count_all(n):
        total = 0
        for i in range(1, n + 1):
            total += ArrangementCalculator.factorial(n) // (ArrangementCalculator.factorial(i) * ArrangementCalculator.factorial(n - i))
        return total

    def select(self, m=None):
        if m is None:
            m = len(self.datas)
        result = []
        for permutation in itertools.permutations(self.datas, m):
            result.append(list(permutation))
        return result

    def select_all(self):
        result = []
        for i in range(1, len(self.datas) + 1):
            for combination in itertools.combinations(self.datas, i):
                result.append(list(combination))
        return result

    @staticmethod
    def factorial(n):
        result = 1
        for i in range(2, n + 1):
            result *= i
        return result

```

This program fixes the bug in the `count_all` method and implements the `select_all` method as described in the docstring.