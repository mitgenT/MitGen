Infill `<MASK>` in the given code as follows:

```python
    @staticmethod
    def kurtosis(data):

        n = len(data)
        mean = sum(data) / n
        std_dev = math.sqrt(sum((x - mean) ** 2 for x in data) / n)

        if n < 4:
            return math.nan

        centered_data = [(x - mean) for x in data]
        fourth_moment = sum(x ** 4 for x in centered_data) / n

        kurtosis_value = (fourth_moment / std_dev ** 4) * 3

        return kurtosis_value
```

The provided solution checks if the length of the data is less than 4, in which case the kurtosis is set to `NaN` (Not a Number) since kurtosis is undefined for samples with fewer than 4 points. Otherwise, it calculates the kurtosis as the fourth moment divided by the square of the standard deviation cubed, multiplied by 3, which represents the kurtosis of the standard normal distribution. The solution ensures that the kurtosis function behaves appropriately for all valid inputs.