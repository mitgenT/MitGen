## Output
```python
def is_palindrome(string: str) -> bool:
    """ 
    Test if given string is a palindrome.
    """

    return string == string[::-1]


def make_palindrome(string: str) -> str:
    l_string = string.lower()
    if is_palindrome(l_string):
        return string
    else:
        for i in range(len(string)):
            if not is_palindrome(l_string[-i:]):
                return string + string[:i][::-1]
```

The <MASK> in this case is replaced by 'if not is_palindrome(l_string[-i:])'. It finds the longest postfix of the string considering case insensitivity that is a palindrome, then appends the reverse of the string prefix before the palindromic suffix to construct the shortest palindrome.