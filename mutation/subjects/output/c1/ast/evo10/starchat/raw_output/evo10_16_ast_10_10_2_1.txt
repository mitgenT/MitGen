```python
def is_palindrome(string: str) -> bool:
    """ 
    Test if given string is a palindrome.
    """

    return string == string[::-1]


def make_palindrome(string: str) -> str:
    l_string = string.lower()
    if is_palindrome(l_string):
        return string
    else:
        for i in range(len(string)):
            if is_palindrome(l_string[:len(string)-i]):
                return string + string[:len(string)-i-1:-1]
```

In the solution, I converted the input string to lowercase and used it to check if it's a palindrome. If it's not, I iterated over its prefix and found the longest palindromic suffix. Then, I appended to the end of the string the reverse order of the string prefix that comes before the palindromic suffix.