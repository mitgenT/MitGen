```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= remainder
        if remainder < 10:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(ord('A') + remainder - 10) + new_base_num
    return new_base_num
```
Here, `base_10 -= remainder` is infilling the `<MASK>`. The code converts `base_10` number to `new_base` number by continuously taking the remainder and dividing `base_10`. When the remainder is greater than 10, we convert it into an uppercase letter using the ASCII value of 'A'.