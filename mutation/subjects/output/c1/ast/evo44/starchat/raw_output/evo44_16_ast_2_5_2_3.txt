```python
def change_base(x: str, base: int, new_base: int):
    base_10 = int(x, base)
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        if 0 <= remainder <= 9:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(remainder + 55) + new_base_num 
    return new_base_num
```
In the solution above, I first converted the input number from its original base to decimal by using Python's built-in int function. Then, I converted the decimal number to the new base as required. I used the ASCII values for characters A-Z to represent digits from 10-35 in the new base.