```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        if 0 <= remainder <= 9:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(remainder - 10 + ord('A')) + new_base_num
    return new_base_num
```
In the example above, to fill the <MASK>, we need to determine the character in the new base's alphabet for the remainder when it's greater than 9. The chr() and ord() functions are used to convert between ASCII values and characters. The ASCII value for the character 'A' is ord('A'), which equals 65. Adding 10 and then passing this to chr() gives us the corresponding character from the new base's alphabet. For example, chr(65) is 'A', chr(66) is 'B', etc. This code completes the task as required.