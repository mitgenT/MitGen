## Output
```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        if remainder < 10:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(ord('A') + remainder - 10) + new_base_num
        base_10 = base_10 // new_base
    return new_base_num
```
I have infilled the missing part of the given code to convert the base of the input number x from one base to another. The new code uses a while loop to calculate the new base representation iteratively and appends the result to `new_base_num` as a string. The program correctly handles numbers in different bases, invalid base inputs, and outputs the base conversion in the desired format.