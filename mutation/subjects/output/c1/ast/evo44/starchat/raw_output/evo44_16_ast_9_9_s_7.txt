## Output

```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 >= new_base:
        remainder = base_10 % new_base
        base_10 -= new_base
        if 0 <= remainder <= 9:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(remainder + 55) + new_base_num 
    if base_10 > 0:
        if 0 <= base_10 <= 9:
            new_base_num = str(base_10) + new_base_num
        else:
            new_base_num = chr(base_10 + 55) + new_base_num 
    return new_base_num
```

The main change in the code is that I added a `while` loop and an `if` condition at the end to handle cases where the `base_10` value is greater than `new_base` but becomes less than `new_base` in the last iteration.