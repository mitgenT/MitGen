## Output
```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        new_base_num = str(chr(ord('0') + remainder) if remainder >= 10 else remainder) + new_base_num
    return new_base_num
```
In the solution, <MASK> has been replaced with the following expression:
`new_base_num = str(chr(ord('0') + remainder) if remainder >= 10 else remainder) + new_base_num` which converts the remainder to its corresponding character for digits greater than or equal to 10, and appends it to the new base number.