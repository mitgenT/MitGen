## Output
```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        new_base_num = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"[base_10 % new_base] + new_base_num
        base_10 //= new_base
    return new_base_num
```

In this case, I added a while loop to convert the number from base to new_base, taking care of the digits above 9 by using uppercase letters from the character string "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".