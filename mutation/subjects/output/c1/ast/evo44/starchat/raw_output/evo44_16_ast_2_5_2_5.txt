## Output
```python
def change_base(x: str, base: int, new_base: int):
    base_10 = 0
    for i in range(len(x)):
        digit = ord(x[i]) - ord('0') if '0' <= x[i] <= '9' else ord(x[i]) - ord('A') + 10
        if digit >= base:
            return "invalid base"
        base_10 = base_10 * base + digit
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        if 0 <= remainder <= 9:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(remainder + 55) + new_base_num 
    return new_base_num
```
I added code inside the function to convert the number x from its base to base 10 (using digit-to-number conversion), then converted it to the new base by repeatedly subtracting multiples of the new base from base 10 until base 10 becomes 0. The remainder at each step was either a digit (0-9) or a letter (A-Z).