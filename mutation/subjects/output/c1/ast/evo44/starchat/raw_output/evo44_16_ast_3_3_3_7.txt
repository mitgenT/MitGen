## Output
```python
def change_base(x: str, base: int, new_base: int):
    base_10 = 0
    try:
        for digit in x:
            base_10 = base_10 * base
            if '0' <= digit <= '9':
                base_10 += int(digit)
            elif 'A' <= digit <= 'Z':
                base_10 += (ord(digit) - 55)
            else:
                raise ValueError
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        if 0 <= remainder <= 9:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(remainder + 55) + new_base_num 
    return new_base_num
```
I have calculated the missing part of the given code to convert a number from one base to another. It converts the input number `x` from the old base `base` to the new base `new_base`. It returns a string representation of the number in the new base. If the input contains any invalid digits for its base, it returns "invalid base".