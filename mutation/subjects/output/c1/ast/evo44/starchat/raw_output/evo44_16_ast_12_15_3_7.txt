```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        new_base_num = str(remainder if remainder < 10 else chr(remainder + 55)) + new_base_num
    return new_base_num
```

Explanation: In the given code, `<MASK>` needs to be replaced with `new_base_num = str(remainder if remainder < 10 else chr(remainder + 55)) + new_base_num`. This line is converting the remainder to a new_base number and appending it to the `new_base_num` string. If the remainder is less than 10, it is converted to a string. If the remainder is 10 or above, it is converted to a letter using ASCII values (A = 10, B = 11,..., Z = 35). This conversion is needed for numbers greater than 9 in the new_base representation.