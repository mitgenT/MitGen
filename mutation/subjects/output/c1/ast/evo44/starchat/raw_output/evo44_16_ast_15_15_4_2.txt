## Output

```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        if 0 <= remainder <= 9:
            new_base_num = str(remainder) + new_base_num
        else:
            new_base_num = chr(ord('A') + remainder - 10) + new_base_num
    return new_base_num
```

In the above code, the missing part (MASK) is replaced with a condition to calculate and append the uppercase letter when the remainder is between 10 and 36. The ASCII value for uppercase 'A' is used to calculate the character, and since 'A' represents digit 10, we subtract 10 and then add it to the ASCII value of 'A' to get the correct character.