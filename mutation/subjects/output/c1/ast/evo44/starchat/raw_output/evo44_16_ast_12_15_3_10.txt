## Output
```python
def change_base(x: str, base: int, new_base: int):
    try:
        base_10 = int(x, base)
    except ValueError:
        return "invalid base"
    new_base_num = ""
    if base_10 == 0:
        return '0'
    while base_10 > 0:
        remainder = base_10 % new_base
        base_10 -= new_base
        new_base_num = str(remainder) if remainder < 10 else chr(ord('A') + remainder - 10) + new_base_num
    return new_base_num
```

In this revised program, we convert the integer to base 10 using the `int()` function. Then, we use a loop to divide by `new_base` and append the remainder to the `new_base_num` string, converting numbers above 10 to corresponding uppercase letters. Finally, we return `new_base_num`.