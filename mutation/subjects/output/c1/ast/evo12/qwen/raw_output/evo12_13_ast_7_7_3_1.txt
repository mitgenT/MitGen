Based on the given docstring, we need to find the longest substring starting with a vowel in each string and update `longest_substring` and `longest_substring_index` accordingly. Here's how the `<MASK>` part should be filled:

```python
        substrings = [substring for substring in string.lower() if substring.startswith(vowels)]
```

The completed code would be:

```python
from typing import List, Optional, Tuple
def longest_substring(strings: List[str]) -> Tuple[Optional[str], Optional[int]]:
    vowels = 'aeiouAEIOU'
    longest_substring = None
    longest_substring_index = None
    for i, string in enumerate(strings):
        substrings = [substring for substring in string.lower() if substring.startswith(vowels)]
        if substrings:
            max_substring = max(substrings, key=len)
            if longest_substring is None or len(max_substring) == len(longest_substring):
                longest_substring = max_substring
                longest_substring_index = i
    return longest_substring, longest_substring_index
```