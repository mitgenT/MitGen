Based on the provided docstring, we need to find the longest substring starting with a vowel from each string in the list. Here's how to fill in the `<MASK>` part:

```python
            max_substring = ''
            for substring in substrings:
                if substring and substring.startswith(vowels):
                    if len(substring) > len(max_substring):
                        max_substring = substring
```

Here's the complete code:

```python
from typing import List, Optional, Tuple
def longest_substring(strings: List[str]) -> Tuple[Optional[str], Optional[int]]:
    vowels = 'aeiouAEIOU'
    longest_substring = None
    longest_substring_index = None
    for i, string in enumerate(strings):
        substrings = [string[j:] for j in range(len(string)) if string[j] in vowels]
        if substrings:
            max_substring = ''
            for substring in substrings:
                if substring and substring.startswith(vowels):
                    if len(substring) > len(max_substring):
                        max_substring = substring
            if longest_substring is None or len(max_substring) == len(longest_substring):
                longest_substring = max_substring
                longest_substring_index = i
    return longest_substring, longest_substring_index
```