Based on the provided docstring, we need to modify the code so that if `char` is lowercase, it remains unchanged at the `special_index`. Here's the filled-in code:

```python
def flip_case_special(string: str, special_index: int) -> str:
    special_index %= len(string)
    result = ''
    for i, char in enumerate(string):
        if i == special_index:
            if char.isupper():
                result += char.lower()
            else:
                result += char
        else:
            if char.isupper():
                result += char.lower()
            else:
                # Since we want to keep lowercase characters at the special_index unchanged,
                # we conditionally add char without modification when it's lowercase
                if not char.islower():
                    result += char
    return result
```

Now the function works as described in the docstring.