Based on the provided docstring, we need to check if the character at the `special_index` is lowercase, and if so, keep it as is. Here's how the code should be filled in:

```python
def flip_case_special(string: str, special_index: int) -> str:
    special_index %= len(string)
    result = ''
    for i, char in enumerate(string):
        if i == special_index:
            if char.isupper():
                result += char.lower()
            else:
                result += char
        else:
            if char.isupper():
                result += char.lower()
            else:
                if char.islower():
                    result += char
    return result
```

The `<MASK>` part is not needed because the condition `char.islower()` is checking whether the character is lowercase already, so there's no action to perform when `char.islower()` is true. The logic is to leave lowercase characters as is when they're at the `special_index`.