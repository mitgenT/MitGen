from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
   from typing import List, Union
   def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
       result = []
       count = 0
       for num in numbers:
           result.append(num)
           if count < limit and num!= numbers[-1]:  # Don't add delimeter for the last element
               result.append(delimeter)
               count += 1
       return result