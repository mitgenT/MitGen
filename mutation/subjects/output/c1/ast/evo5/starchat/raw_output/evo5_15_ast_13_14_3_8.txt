## Output

```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:  # Only apply delimeter up to the limit times
            if set_float:
                result.append(float(delimeter))
            else:
                result.append(delimeter)
    result.append(numbers[-1])  # append the last number
    return result

```

In the given code, <MASK> represents an `if` statement that applies the delimeter only up to the limit times. Also, note that the last number in the 'numbers' list is not interspersed with the delimiter, so it is appended to the'result' list outside the loop.