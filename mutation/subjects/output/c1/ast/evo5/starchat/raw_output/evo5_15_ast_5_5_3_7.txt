## Output
```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
    return result
```
In the output, I have added an extra variable'set_float' and checked the type of the 'delimeter'. If the 'delimeter' is a float,'set_float' will be True and the numbers will be converted to float while appending to the'result'. This is to make sure that the output list will also be in float if the delimeter is a float. This is according to the given requirements.