## Output
```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            if i % 2 == 0:  # Insert delimeter only on even indices
                if set_float:
                    result.append(float(delimeter))
                else:
                    result.append(delimeter)
    return result
```
In the given solution, I added a check to insert the `delimeter` only at even indices until we reach `limit`. Also, I converted `delimeter` to the same type as `numbers` elements for the `result` list.