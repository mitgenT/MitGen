## Output
```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
        else:
            result.append(numbers[i+1])
    return result
```
This program takes a list, a delimeter, and a limit as input. It appends the first number from the list to the result. Then, it checks if the current iteration is less than the limit. If so, it adds the delimeter to the result. Finally, if it's not, it adds the next number from the list to the result. This results in a list where every two consecutive elements are separated by the delimeter, up to the limit times. If the delimeter is a float, the output list will also be in float.