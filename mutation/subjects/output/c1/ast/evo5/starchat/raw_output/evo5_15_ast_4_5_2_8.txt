## Output
```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = isinstance(delimeter, float) or any(isinstance(num, float) for num in numbers)
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
    return result
```

In the given code, we first determine whether the delimiter or any number in the list is float. We store this information in `set_float` variable. We then append the elements of the list based on the `set_float` value and only insert the delimiter for the first `limit` pairs of consecutive numbers.