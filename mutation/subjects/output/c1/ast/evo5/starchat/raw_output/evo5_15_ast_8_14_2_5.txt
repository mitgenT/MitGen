## Output
```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i, num in enumerate(numbers):
        result.append(num)
        if i < limit:
            result.append(delimeter)
    if set_float and not all(isinstance(n, float) for n in result):
        result = [float(n) for n in result]
    return result
```

Here, in the for-loop, we are adding each element of the input list 'numbers' to the'result'. After each iteration, if the current index 'i' is less than 'limit', we add the 'delimeter' to the'result'. If 'delimeter' is a float, we check if all the elements of'result' are already float. If not, we convert all the elements of'result' to float.