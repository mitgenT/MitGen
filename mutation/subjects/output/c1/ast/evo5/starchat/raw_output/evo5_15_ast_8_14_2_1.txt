```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers)):
        result.append(numbers[i])
        if i < limit:
            result.append(delimeter if not set_float else float(delimeter))
    return result
```

I used a loop to append the 'numbers' to the'result' list and inserted the 'delimeter' up to 'limit' times, taking care of whether 'delimeter' is a float or not. I utilized the 'if' condition to check if the type of 'delimeter' is 'float'. If it is, I converted 'delimeter' into a float while inserting it to the'result' list. The loop stopped when it reached 'limit' number of consecutive pairs of numbers in 'numbers'.