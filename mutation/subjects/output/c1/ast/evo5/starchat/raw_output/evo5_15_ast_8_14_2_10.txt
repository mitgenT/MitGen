```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i, num in enumerate(numbers):
        result.append(num)
        if i < limit:
            result.append(delimeter if not set_float else float(delimeter))
    return result

```
Now the given code is filled with the missing part. The program will insert the 'delimeter' between consecutive elements of the input list 'numbers' up to 'limit' times. It also handles the case when 'delimeter' is a float by converting 'delimeter' to float before inserting it into the result list.