## Output

```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if not isinstance(numbers[0], type(delimeter)):
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
    return result
```
In this code, `set_float` checks whether the first element of 'numbers' and 'delimeter' are of the same type. If not, it indicates that the 'delimeter' could be a float and then `set_float` is set as True. This ensures that the result list will contain float numbers when necessary. For numbers before the limit, it appends both the number and the delimeter into the `result` list. For the last element of `numbers`, it only appends the number without a delimeter.