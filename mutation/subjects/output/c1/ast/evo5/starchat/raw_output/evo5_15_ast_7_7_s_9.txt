## Output
```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
    result.append(numbers[-1])
    return result
```
In this solution, we introduce a'set_float' boolean variable to check if 'delimeter' is a float. In the loop, we convert the current number to float before adding to'result' if'set_float' is True. After finishing the loop for all elements except the last one, we append the last number to'result'.