```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    result = []
    if type(delimeter) == float:
        set_float = True
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
    return result + [numbers[-1]]  # Ensure last number is added without a delimiter at the end
```
Infilling <MASK> is done by appending `numbers[-1]` to the result list to add the last number to the result without adding a delimiter after it. This is to cover all elements in the input list.