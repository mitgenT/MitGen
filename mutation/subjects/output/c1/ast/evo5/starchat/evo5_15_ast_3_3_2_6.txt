from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    if type(delimeter) == float:
        set_float = True
        result = [float(numbers[0])]  # Ensure first element is in float when delimeter is float
    else:
        set_float = False
        result = [numbers[0]]

    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if i < limit:
            result.append(delimeter)
        result.append(numbers[i+1])
    return result