from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
   from typing import List, Union
   def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
       result = []
       for i, num in enumerate(numbers):
           result.append(num)
           if i < min(len(numbers) - 1, limit):  # check if this is the last one or within limit
               result.append(delimeter)
       return result