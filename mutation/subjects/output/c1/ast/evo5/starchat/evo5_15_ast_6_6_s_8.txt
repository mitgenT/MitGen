from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    if set_float:
        result.append(float(numbers[0]))
    else:
        result.append(numbers[0])
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if i < limit:
            result.append(delimeter)
        if set_float:
            result.append(float(numbers[i + 1]))
        else:
            result.append(numbers[i + 1])
    return result