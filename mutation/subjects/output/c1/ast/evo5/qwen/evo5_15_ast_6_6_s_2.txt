from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    # Check if the limit is greater than 0
    if limit > 0:
        result = []  # Initialize an empty list to store the result
    else:
        result = numbers  # No need to insert the delimeter if limit is 0, just return the original list
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
    return result