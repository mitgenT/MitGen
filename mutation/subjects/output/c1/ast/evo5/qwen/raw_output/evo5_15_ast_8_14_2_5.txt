```python
from typing import List, Union

def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    result = []
    limit = min(limit, len(numbers) - 1)

    # Iterate over the list with the specified limit
    for i in range(0, len(numbers), 1 if set_float else 2):  # If delimeter is float, increment by 1; otherwise, keep at 2
        result.append(numbers[i])
        if i + 1 <= limit:  # Insert the delimiter up to 'limit' times
            if set_float:
                result.append(float(delimeter))
            else:
                result.append(delimeter)

    return result

```