Based on the provided docstring, the function `intersperse` should insert the `delimeter` between consecutive elements of the `numbers` list, up to `limit` times. Here's how you can infill the `<MASK>` in the code:

```python
from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    if type(delimeter) == float:
        set_float = True
    else:
        set_float = False
    result = []
    limit = min(limit, len(numbers) - 1) 
    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        if i < limit:
            result.append(delimeter)
    return result
```

The added conditional statement checks if `delimeter` is a float, which determines whether the output list should contain float values or not. This is consistent with the behavior described in the docstring.