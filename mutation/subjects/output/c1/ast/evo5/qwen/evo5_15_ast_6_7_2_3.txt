from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        set_float = True
    if limit > 0:
        if set_float:
            result = [float(numbers[0])]
        else:
            result = [numbers[0]]
        for _ in range(limit - 1):
            if set_float:
                result.append(float(delimeter))
            else:
                result.append(delimeter)
    for i in range(1, len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
    if set_float:
        result.append(float(numbers[-1]))
    else:
        result.append(numbers[-1])
    return result