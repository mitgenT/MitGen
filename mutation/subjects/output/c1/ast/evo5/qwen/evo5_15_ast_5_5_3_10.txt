from typing import List, Union
def intersperse(numbers: List[Union[int, float]], delimeter: Union[int, float], limit: int) -> List[Union[int, float]]:
    set_float = False
    if type(delimeter) == float:
        if limit > 0:  # Check if there's at least one insertion to be done
            set_float = True  # Set flag to indicate that the output should be in float format
    result = []
    limit = min(limit, len(numbers) - 1) 

    for i in range(len(numbers) - 1):
        if set_float:
            result.append(float(numbers[i]))
        else:
            result.append(numbers[i])
        
        if i < limit:
            result.append(delimeter)

    return result