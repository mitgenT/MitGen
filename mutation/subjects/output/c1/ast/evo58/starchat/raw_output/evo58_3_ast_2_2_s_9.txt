if len(common_list) < n:
    common_list = l1 + l2
```python
def common(l1: list, l2: list, n: int):
    common_list = list(set(l1) & set(l2))
    if len(common_list) < n:
        common_list = l1 + l2
    return sorted(common_list[:n], key=lambda x: (len(x), l1.index(x)))
```
The output is the code that fills in the `<MASK>` based on the provided docstring and the given code. The function will return the `n` longest strings that are common in both `l1` and `l2`, sorted by increasing length in case of a tie. In case the number of common strings is less than `n`, it will prioritize strings from `l1`.