from typing import List, Tuple
def interleave_and_concatenate(strings: List[str], integers: List[int]) -> Tuple[str, int]:
    interleaved = []
    len_strings = len(strings)
    len_integers = len(integers)
    max_len = max(len_strings, len_integers)
    for i in range(max_len):
        if i < len_strings:
            interleaved.append(strings[i])
        if i < len_strings and i < len_integers:  # Check if both lists have elements at the current index
            interleaved.append(strings[i])
            interleaved.append(integers[i])
        elif i < len_strings:  # If only strings left, append them
            interleaved.append(strings[i])
        else:  # If only integers left, append them
            interleaved.append(integers[i - len_strings])  # Subtract len_strings to handle indexing properly
    concatenated_string = ' '.join([str(i) for i in interleaved if isinstance(i, str)]) 
    sum_integers = sum([i for i in interleaved if isinstance(i, int)])
    return (concatenated_string, sum_integers)