from typing import List, Tuple
def interleave_and_concatenate(strings: List[str], integers: List[int]) -> Tuple[str, int]:
    interleaved = []
    len_strings = len(strings)
    len_integers = len(integers)
    max_len = max(len_strings, len_integers)
    for i in range(max_len):
        if i < len_strings:
            interleaved.append(strings[i])
        if i < len_integers:  # Interleave integers
            interleaved.append(integers[i])
        else:  # Continue with remaining strings or integers
            if len_strings:  # If there are remaining strings
                interleaved.append(strings[i % len_strings])
            else:  # If there are no more strings, only sum integers
                sum_integers += integers[i - len_strings]  # Account for the skipped integers

    concatenated_string = ' '.join([str(i) for i in interleaved if isinstance(i, str)]) 
    sum_integers = sum([i for i in interleaved if isinstance(i, int)])
    return (concatenated_string, sum_integers)