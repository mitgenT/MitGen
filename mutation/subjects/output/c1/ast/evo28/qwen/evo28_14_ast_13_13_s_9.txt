from typing import List, Tuple

def interleave_and_concatenate(strings: List[str], integers: List[int]) -> Tuple[str, int]:
    interleaved = []
    len_strings = len(strings)
    len_integers = len(integers)
    max_len = max(len_strings, len_integers)

    # Iterate over the longer list, appending elements from both lists
    for i in range(max_len):
        if i < len_strings:
            interleaved.append(strings[i])
        if i < len_integers:
            interleaved.append(int(integers[i]))

    # Concatenate string elements
    concatenated_string = ' '.join([str(i) for i in interleaved if isinstance(i, str)])

    # Calculate sum of integer elements
    sum_integers = sum([i for i in interleaved if isinstance(i, int)])

    # If one list is shorter, append the remaining elements of the longer list
    if len_strings > len_integers:
        for i in range(len_strings - len_integers):
            interleaved.append(strings[len_integers + i])
    elif len_integers > len_strings:
        for i in range(len_integers - len_strings):
            interleaved.append(int(integers[len_strings + i]))

    return (concatenated_string, sum_integers)