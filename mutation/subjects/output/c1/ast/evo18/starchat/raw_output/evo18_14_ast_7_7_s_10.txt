## Output
```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        if sub in string:
            pos = string.find(sub, start)
            while pos!= -1:
                result[sub] += 1
                start = pos + 1
                pos = string.find(sub, start)
    return result
```
In the output, <MASK> is replaced with'sub in string' and another 'while' loop is added to keep finding the substring from the new position until it is not found anymore. This ensures that overlapping cases are counted correctly.