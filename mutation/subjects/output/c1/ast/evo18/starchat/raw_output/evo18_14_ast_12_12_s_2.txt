## Output
```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - len(sub) + 1:
            pos = string.find(sub, start)
            if pos!= -1:
                result[sub] += 1
                start = pos + len(sub)
            if start >= len(string):
                break
    return result
```

In the modified version, when searching for the next occurrence of a substring, we increment the start position by the length of the found substring to avoid unnecessary comparisons. We also add a check for the start position being greater than or equal to the length of the string to break out of the loop.