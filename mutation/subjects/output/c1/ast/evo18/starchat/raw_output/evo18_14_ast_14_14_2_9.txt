## Output
```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos!= -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    if string == '':
        return {sub: 0 for sub in substrings}
```

In the given code, we added two if conditions. The first one checks if any of the substrings is an empty string, and if so, it returns "Substrings cannot be empty". The second one checks if the input string is empty, and if so, it returns a dictionary with zero counts for each substring.