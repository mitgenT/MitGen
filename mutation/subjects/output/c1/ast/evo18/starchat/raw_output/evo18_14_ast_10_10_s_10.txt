## Output

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos!= -1:
                if pos + len(sub) <= len(string):
                    result[sub] += 1
                else:
                    break
                start = pos + 1
            else:
                break
    return result
```

Here, `<MASK>` was replaced with `pos + len(sub) <= len(string)` in the if condition and with `result[sub] += 1` in the corresponding else condition. This ensures that overlapping occurrences are counted properly. The else statement at the while loop ensures the break when no further occurrence of substring is found.