## Output:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    
    count_dict = {sub: 0 for sub in substrings}
    
    for sub in substrings:
        for i in range(len(string) - len(sub) + 1):
            if string[i:i+len(sub)] == sub:
                count_dict[sub] += 1
                
    return count_dict
```

This program defines a function called `how_many_times`, which takes a string and a list of substrings as input. It first checks if any substring is empty, and if so, it returns the error message "Substrings cannot be empty". Otherwise, it initializes a dictionary `count_dict` to store the counts of each substring. 

Then, for each substring, it iterates through all possible starting indices in the string. For each starting index, it checks if the substring starting at that index matches the current substring. If a match is found, it increments the count for the current substring in `count_dict`.

Finally, it returns the `count_dict`.