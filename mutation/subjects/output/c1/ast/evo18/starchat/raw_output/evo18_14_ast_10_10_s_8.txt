## Output
```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos!= -1:
                if sub in string[pos:pos+len(sub)]:
                    result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```

The `if sub in string[pos:pos+len(sub)]` condition checks for overlapping cases where a substring appears more than once in the input string. The count will be increased only if the substring is found at the current position `pos` without being included before.