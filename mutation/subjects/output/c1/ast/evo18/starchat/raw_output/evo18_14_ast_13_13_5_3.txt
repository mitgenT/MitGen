## Output
```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos!= -1:
                result[sub] += 1
                start = pos + 1
            else:
                if sub in result:
                    break
    return result
```
In the given code, `<MASK>` has been filled with the condition `sub in result` and the break statement `break`. This will ensure that the program stops searching for the current substring once it has found all occurrences in the given string.