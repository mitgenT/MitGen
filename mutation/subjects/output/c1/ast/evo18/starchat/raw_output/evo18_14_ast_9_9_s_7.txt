```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos!= -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```
Here, I used the `find()` method in the `while` loop to find the position of the substring in the original string, and increased the count accordingly when found. The loop continues till there is no more occurrence of the substring. If a substring is not found, the loop breaks.