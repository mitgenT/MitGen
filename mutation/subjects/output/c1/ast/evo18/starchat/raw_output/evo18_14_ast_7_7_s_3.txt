## Output

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string):
            pos = string.find(sub, start)
            if pos!= -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```
The added "while" loop is used to check for overlapping cases. In each iteration of the loop, the program searches for the current substring starting from the position after the last found occurrence. If the substring is found, the count is increased and the search continues from the next position. If the substring is not found, the loop breaks.