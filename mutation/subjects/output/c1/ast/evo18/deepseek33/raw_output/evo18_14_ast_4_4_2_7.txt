The missing infill in the provided code can be found as follows:

## Output
```python
def how_many_times(string: str, substrings: list) -> dict:
    result = {sub: 0 for sub in substrings}
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    if len(string) == 0:
        return result
    for sub in substrings:
        start = 0
        while start < len(string):
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```

Here, the missing infill `if len(string) == 0:` and `result = {sub: 0 for sub in substrings}` have been added. The first condition checks if the input string is empty and returns a dictionary with zero counts for each substring. The second condition initializes the result dictionary with keys as the substring and value as 0.
