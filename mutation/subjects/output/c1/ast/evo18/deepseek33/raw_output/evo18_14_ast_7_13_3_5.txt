The masked code can be replaced with:

```python
for i in range(len(string) - len(sub) + 1):
    if string[i:i+len(sub)] == sub:
        result[sub] += 1
```

So, the final code would be:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        for i in range(len(string) - len(sub) + 1):
            if string[i:i+len(sub)] == sub:
                result[sub] += 1
    return result
```
This function works by iterating over each substring in the list, and then for each substring, it checks every possible position within the string where the substring could start. If the substring is found at that position, the count for that substring is increased by one.
