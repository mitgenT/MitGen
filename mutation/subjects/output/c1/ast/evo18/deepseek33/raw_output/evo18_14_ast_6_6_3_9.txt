In the given code, the infilled value of the `<MASK>` should be `start = string.find(sub)`. This sets the starting index for the search to the index of the first occurrence of the substring in the string, if it exists, or `-1` otherwise. This allows the code to correctly find multiple occurrences of the substring in the string (including overlapping occurrences).

The full code would then look like this:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = string.find(sub)
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```
