## Infilled code:
```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            if start == len(string):
                break
            if pos == -1:
                start += 1
    return result
```

In this code, `if start == len(string): break` checks if the start index is equal to the length of the string, which means all substrings have been checked and we can break the loop. `if pos == -1: start += 1` increments the start index if no occurrence of the substring is found, so that the next character in the string can be checked.
