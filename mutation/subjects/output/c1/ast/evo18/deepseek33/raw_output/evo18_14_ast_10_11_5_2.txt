The correct infill would be:

```Python
result[sub] += 1
start = pos + 1
```

This code correctly updates the count of the substring in the dictionary and also updates the 'start' variable to the position after the found substring for the next search.

Here is the entire program:

```Python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```
