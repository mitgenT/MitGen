def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - len(sub) + 1:  # Adjust the loop condition to avoid out-of-bounds
            pos = string.find(sub, start)
            if pos != -1:  # `find` returns -1 if not found
                string = string[:pos] + string[pos+len(sub):]  # Shift the string to exclude the found substring
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result