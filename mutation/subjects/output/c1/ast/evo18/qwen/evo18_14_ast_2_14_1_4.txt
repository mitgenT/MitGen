def how_many_times(string: str, substrings: list) -> dict:
    if not string or not substrings:  # Check for empty string or empty list of substrings
        if not string:
            return {"Substrings cannot be empty": 0}
        else:
            return {substring: 0 for substring in substrings}

    counts = {}  # Initialize dictionary to store counts
    for substring in substrings:
        if not substring:  # Handle empty substring
            return {"Substrings cannot be empty": 0}

        count = string.count(substring)  # Count occurrences of each substring
        if substring in counts:
            counts[substring] += count  # Increase count if it appears multiple times
        else:
            counts[substring] = count  # Add count for first occurrence

    return counts

# Test cases
print(how_many_times('', ['a']))  # {'a': 0}
print(how_many_times('aaa', ['a', 'a']))  # {'a': 6}
print(how_many_times('aaaa', ['aa', 'a']))  # {'aa': 3, 'a': 4}
print(how_many_times('abcabc', ['a', 'b', 'c']))  # {'a': 2, 'b': 2, 'c': 2}