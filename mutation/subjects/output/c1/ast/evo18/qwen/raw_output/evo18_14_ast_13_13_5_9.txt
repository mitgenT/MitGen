Based on the provided docstring, we need to fill `<MASK>` in the code to handle the case when `pos` is `-1` (substring not found), and increment the `start` index to continue searching for overlapping occurrences. Here's the filled-in code:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            else:
                if start < len(string) - len(sub):  # Check if there's space for another occurrence
                    start += 1
                else:
                    break  # No more occurrences found, exit the loop
    return result
```