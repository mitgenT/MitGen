Based on the provided docstring, the function `how_many_times` should iterate through the `string` and find occurrences of each `substring`. Here's the infilled code:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        if sub:  # Check if the substring is not empty
            start = 0  # Initialize the start position
        while start < len(string) - len(sub) + 1:  # Ensure we don't go out of bounds
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```

Now, the `while` loop condition includes the length of the `substring` to check if there's enough space left in the string to find the next occurrence.