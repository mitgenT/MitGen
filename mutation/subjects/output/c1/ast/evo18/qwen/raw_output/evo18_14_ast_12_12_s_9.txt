Based on the provided docstring, the function needs to keep searching for substrings after finding one, so it should increment the `start` index by the length of the substring after each occurrence. Here's how the code should look with `<MASK>` filled:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - len(sub):
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + len(sub)  # Increment start by the length of the substring
            else:
                break  # If not found, break the loop
    return result
```