Based on the given docstring, the function should count overlapping occurrences of the substrings in the original string. To do this, we need to increment the count for each match found, taking into account that we might find a substring multiple times starting from the position `pos`. Here's how the code should be filled in:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1 + len(sub):  # Adjust the condition to allow overlap
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1  # Increment the count
                start = pos + 1  # Move the start position after the match
            else:
                break
    return result
```