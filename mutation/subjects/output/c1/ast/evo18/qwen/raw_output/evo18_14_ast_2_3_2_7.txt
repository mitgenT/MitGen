Based on the provided docstring, the given code should handle counting overlapping occurrences of substrings in the input string. Here's how you should fill in `<MASK>`:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    if not string:
        return {sub: 0 for sub in substrings}
    
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string):
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```

Now the function checks for empty substrings and handles the case when the input string is empty, according to the given docstring.