Based on the provided docstring, we need to count overlapping occurrences of each substring in the input string. Here's the filled-in code:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - len(sub) + 1:  # Adjust the loop condition to avoid IndexErrors
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1  # Increment count when a match is found
                start = pos + 1  # Move the start position after the matched substring
            else:
                break
    return result
```

The `<MASK>` parts have been replaced with appropriate lines that increment the count and update the start position.