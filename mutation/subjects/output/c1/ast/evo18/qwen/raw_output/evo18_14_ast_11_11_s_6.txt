Based on the given docstring, we need to update the `how_many_times` function to count overlapping occurrences of substrings and increase the count when a match is found. Here's how to fill in the `<MASK>` sections:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string) - 1:
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                string = string[pos + len(sub):]  # Shift the start index after finding a match
                start = pos  # Restart the loop from the new start position
            else:
                break
    return result
```

The filled-in code now properly handles overlapping occurrences and updates the input string to skip over the already matched substring in the next iteration.