Based on the provided docstring, we need to iterate through the `string` and find each occurrence of the `sub` substring, counting it and updating the starting position for the next search. Here's the infilled code:

```python
def how_many_times(string: str, substrings: list) -> dict:
    if any(sub == '' for sub in substrings):
        return "Substrings cannot be empty"
    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        if start < len(string):
            while start < len(string) - 1:
                pos = string.find(sub, start)
                if pos != -1:
                    result[sub] += 1
                    start = pos + 1
                else:
                    break
    return result
```