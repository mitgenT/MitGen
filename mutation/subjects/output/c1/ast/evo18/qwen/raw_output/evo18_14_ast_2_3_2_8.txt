Based on the provided docstring, the function should handle empty substrings, empty input strings, and overlapping cases. The correct implementation would involve checking for empty substrings and updating the dictionary count when a substring is found. Here's how the `<MASK>` part should be filled:

```python
def how_many_times(string: str, substrings: list) -> dict:
    # Check for empty substrings and empty input string
    if not all(sub for sub in substrings):
        if '' in substrings:
            return "Substrings cannot be empty"
        elif not string:
            return {sub: 0 for sub in substrings}

    result = {sub: 0 for sub in substrings}
    for sub in substrings:
        start = 0
        while start < len(string):
            pos = string.find(sub, start)
            if pos != -1:
                result[sub] += 1
                start = pos + 1
            else:
                break
    return result
```