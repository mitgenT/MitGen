docstring:
"""
You are given a binary array of length 𝑛. You are allowed to perform one operation on it at most once. In an operation, you can choose any element and flip it: turn a 0 into a 1 or vice-versa. What is the maximum number of inversions‡ the array can have after performing at most one operation? † A binary array is an array that contains only zeroes and ones. ‡ The number of inversions in an array is the number of pairs of indices 𝑖,𝑗 such that 𝑖<𝑗 and 𝑎𝑖>𝑎𝑗.

Input 

The input consists of multiple test cases. The first line contains an integer t (1≤t≤10^4) — the number of test cases. The description of the test cases follows. The first line of each test case contains an integer 𝑛 (1≤𝑛≤2⋅10^5 ) — the length of the array. The following line contains 𝑛 space-separated positive integers 𝑎1 , 𝑎2 ,..., 𝑎𝑛 (0≤𝑎𝑖≤1 ) — the elements of the array. It is guaranteed that the sum of 𝑛 over all test cases does not exceed 2⋅10^5.

Output 

For each test case, output a single integer  — the maximum number of inversions the array can have after performing at most one operation.

Example

Input

5
4
1 0 1 0
6
0 1 0 0 1 0
2
0 0
8
1 0 1 1 0 0 0 1
3
1 1 1

Output

3
7
1
13
2

Note
For the first test case, the inversions are initially formed by the pairs of indices (1,2 ), (1,4 ), (3,4 ), being a total of 3 , which already is the maximum possible. For the second test case, the inversions are initially formed by the pairs of indices (2,3 ), (2,4 ), (2,6 ), (5,6 ), being a total of four. But, by flipping the first element, the array becomes 1,1,0,0,1,0 , which has the inversions formed by the pairs of indices (1,3 ), (1,4 ), (1,6 ), (2,3 ), (2,4 ), (2,6 ), (5,6 ) which total to 7 inversions which is the maximum possible.
"""